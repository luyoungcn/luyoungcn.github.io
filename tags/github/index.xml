<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Github on LuyangのBlog</title>
    <link>https://luyoungcn.github.io/tags/github/</link>
    <description>Recent content in Github on LuyangのBlog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 01 Jan 1970 00:00:00 +0800</lastBuildDate>
    <atom:link href="https://luyoungcn.github.io/tags/github/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>git clone 包含 submodule 的仓库</title>
      <link>https://luyoungcn.github.io/posts/git_clone%E5%8C%85%E5%90%ABsubmodule%E7%9A%84%E4%BB%93%E5%BA%93/</link>
      <pubDate>Thu, 01 Jan 1970 00:00:00 +0800</pubDate>
      <guid>https://luyoungcn.github.io/posts/git_clone%E5%8C%85%E5%90%ABsubmodule%E7%9A%84%E4%BB%93%E5%BA%93/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;使用 git clone 命令来克隆主仓库：&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone &amp;lt;主仓库 URL&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;进入主仓库所在的根目录，并使用 &lt;code&gt;git submodule init&lt;/code&gt; 命令来初始化 submodule：&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd &amp;lt;主仓库目录&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git submodule init&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;使用 &lt;code&gt;git submodule update&lt;/code&gt; 命令来更新 submodule 中的内容：&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git submodule update&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这个命令会从 submodule 的远程仓库中拉取代码，并将其合并到本地代码中。&lt;/p&gt;</description>
    </item>
    <item>
      <title>git 使用指定的 ssh key</title>
      <link>https://luyoungcn.github.io/posts/git%E4%BD%BF%E7%94%A8%E6%8C%87%E5%AE%9A%E7%9A%84ssh_key/</link>
      <pubDate>Thu, 01 Jan 1970 00:00:00 +0800</pubDate>
      <guid>https://luyoungcn.github.io/posts/git%E4%BD%BF%E7%94%A8%E6%8C%87%E5%AE%9A%E7%9A%84ssh_key/</guid>
      <description>&lt;p&gt;Git 提供了以下两种方式来指定使用哪个 SSH Key 进行认证：&lt;/p&gt;&#xA;&lt;h2 id=&#34;使用-git-config-命令&#34;&gt;使用 Git Config 命令&lt;/h2&gt;&#xA;&lt;p&gt;使用 &lt;code&gt;git config&lt;/code&gt; 命令来配置 Git 的全局或本地参数。在这个命令中，可以使用 &lt;code&gt;core.sshCommand&lt;/code&gt; 参数来指定使用哪个 SSH Key 进行认证。&lt;/p&gt;&#xA;&lt;p&gt;例如：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 全局范围内使用 SSH Key&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git config --global core.sshCommand &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ssh -i ~/.ssh/my_private_key&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 仅对当前仓库使用 SSH Key&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git config core.sshCommand &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ssh -i ~/.ssh/my_private_key&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上面的命令会告诉 Git，使用 &lt;code&gt;~/.ssh/my_private_key&lt;/code&gt; 文件作为 SSH 私钥进行认证。&lt;/p&gt;&#xA;&lt;h2 id=&#34;使用-git-clone-命令&#34;&gt;使用 Git Clone 命令&lt;/h2&gt;&#xA;&lt;p&gt;在使用 git clone 命令克隆项目时，可以通过 &lt;code&gt;-c&lt;/code&gt; 或 &lt;code&gt;--config&lt;/code&gt; 参数来指定使用哪个 SSH Key 进行认证。示例如下：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git clone -c core.sshCommand&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ssh -i ~/.ssh/my_private_key&amp;#34;&lt;/span&gt; git@github.com:user/repo.git&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上面的命令将会使用 &lt;code&gt;-i ~/.ssh/my_private_key&lt;/code&gt; 指定的 SSH Key 进行认证。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
