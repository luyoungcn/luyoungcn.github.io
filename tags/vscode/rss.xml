<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Vscode on LuyangのBlog</title><link>/tags/vscode/</link><description>Recent content in Vscode on LuyangのBlog</description><generator>Hugo</generator><language>zh-CN</language><lastBuildDate>Fri, 03 Feb 2023 12:00:00 +0800</lastBuildDate><atom:link href="/tags/vscode/rss.xml" rel="self" type="application/rss+xml"/><item><title>vscode remote-ssh 免密登录配置</title><link>/post/vscode_remote-ssh_%E5%85%8D%E5%AF%86%E7%99%BB%E5%BD%95%E9%85%8D%E7%BD%AE/</link><pubDate>Fri, 03 Feb 2023 12:00:00 +0800</pubDate><guid>/post/vscode_remote-ssh_%E5%85%8D%E5%AF%86%E7%99%BB%E5%BD%95%E9%85%8D%E7%BD%AE/</guid><description>&lt;h1 id="vscode-remote-ssh-免密登录">vscode remote-ssh 免密登录&lt;/h1>
&lt;h2 id="环境声明">环境声明&lt;/h2>
&lt;p>win10 vscode + remote-ssh + virtualbox (ubuntu 20.04)&lt;/p>
&lt;h2 id="windows-配置">windows 配置&lt;/h2>
&lt;ol>
&lt;li>安装 vscode，remote-ssh 插件&lt;/li>
&lt;li>生成 ssh key：&lt;code>ssh-keygen.exe -t rsa&lt;/code> 然后一路回车&lt;/li>
&lt;li>用户目录下会生成 id_rsa id_rsa.pub 两个文件&lt;/li>
&lt;/ol>
&lt;h2 id="服务器-ubuntu-配置">服务器 ubuntu 配置&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>安装 ssh server: &lt;code>sudo apt install openssh-server&lt;/code>&lt;/p></description></item><item><title>vscode 阅读 Linux 内核代码配置</title><link>/post/vscode-%E9%98%85%E8%AF%BB-linux-%E5%86%85%E6%A0%B8%E4%BB%A3%E7%A0%81%E9%85%8D%E7%BD%AE/</link><pubDate>Thu, 01 Jan 1970 00:00:00 +0800</pubDate><guid>/post/vscode-%E9%98%85%E8%AF%BB-linux-%E5%86%85%E6%A0%B8%E4%BB%A3%E7%A0%81%E9%85%8D%E7%BD%AE/</guid><description>&lt;p>内核源码根目录下创建 .vscode 目录&lt;/p>
&lt;p>.vscode 目录下创建 c_cpp_properties.json 文件，内容如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;configurations&amp;#34;&lt;/span>: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Linux&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;includePath&amp;#34;&lt;/span>: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;${workspaceFolder}/**&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;defines&amp;#34;&lt;/span>: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;__KERNEL__&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#960050;background-color:#1e0010">[&lt;/span>&lt;span style="color:#f92672">&amp;#34;compilerPath&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;/opt/bstos/2.3.0.4/sysroots/x86_64-bstsdk-linux/usr/bin/aarch64-bst-linux/aarch64-bst-linux-gcc&amp;#34;&lt;/span>,&lt;span style="color:#960050;background-color:#1e0010">](&amp;lt;https:&lt;/span>&lt;span style="color:#75715e">//www.notion.so/Docker-22f588b5e85d492895231b70d4b5c4a0?pvs=21&amp;gt;)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">&amp;#34;cStandard&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;c11&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;cppStandard&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;c++17&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;intelliSenseMode&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;gcc-x64&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;version&amp;#34;&lt;/span>: &lt;span style="color:#ae81ff">4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>说明：&lt;/p>
&lt;ol>
&lt;li>compilerPath 需要指定编译器bin文件的路径，而不是编译器所在目录&lt;/li>
&lt;li>defines 添加 “&lt;strong>KERNEL&lt;/strong>” 为了解决 uapi 相关头文件中会根据该宏控区分应用层和内核层，如果不定义可能出现头文件不存在问题&lt;/li>
&lt;/ol>
&lt;p>例如 &lt;code>include/uapi/linux/videodev2.h&lt;/code> 中&lt;/p></description></item><item><title>Windows Vscode Plantuml 环境搭建</title><link>/post/windowsvscodeplantuml%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</link><pubDate>Thu, 01 Jan 1970 00:00:00 +0800</pubDate><guid>/post/windowsvscodeplantuml%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</guid><description>&lt;ul>
&lt;li>
&lt;p>
&lt;a href="https://code.visualstudio.com/" title="下载" rel="noopener external nofollow noreferrer" target="_blank" class=" exturl">
 下载
 &lt;i class="fa fa-external-link-alt">&lt;/i>
&lt;/a>安装vscode&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://www.java.com/zh_CN/download/windows_offline.jsp" title="下载" rel="noopener external nofollow noreferrer" target="_blank" class=" exturl">
 下载
 &lt;i class="fa fa-external-link-alt">&lt;/i>
&lt;/a>安装java，不然无法预览plantuml&lt;/p>
&lt;ul>
&lt;li>下载安装该java安装包后没有设置相关java环境变量就可以预览plantuml了。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://www2.graphviz.org/Packages/stable/windows/10/msbuild/Release/Win32/" title="下载" rel="noopener external nofollow noreferrer" target="_blank" class=" exturl">
 下载
 &lt;i class="fa fa-external-link-alt">&lt;/i>
&lt;/a>安装graphivz，不然预览类图报错如下：&lt;/p></description></item></channel></rss>