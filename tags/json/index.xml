<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Json on LuyangのBlog</title>
    <link>/tags/json/</link>
    <description>Recent content in Json on LuyangのBlog</description>
    <generator>Hugo</generator>
    <language>en-US</language>
    <lastBuildDate>Thu, 01 Jan 1970 00:00:00 +0800</lastBuildDate>
    <atom:link href="/tags/json/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>nlohmann json lib</title>
      <link>/posts/nlohmann_json/</link>
      <pubDate>Thu, 01 Jan 1970 00:00:00 +0800</pubDate>
      <guid>/posts/nlohmann_json/</guid>
      <description>&lt;h1 id=&#34;nlohmann-json-modern-c-json-lib&#34;&gt;nlohmann json Modern C++ JSON lib&lt;/h1&gt;&#xA;&lt;h2 id=&#34;摘要&#34;&gt;摘要&lt;/h2&gt;&#xA;&lt;p&gt;本文档全面介绍了 &lt;code&gt;nlohmann/json&lt;/code&gt;，一个广受欢迎的现代C++ JSON库。我们将从其起源与发展入手，探讨其在C++生态系统中的地位，并与其他主流C++ JSON库进行比较。随后，深入剖析 &lt;code&gt;nlohmann/json&lt;/code&gt; 的架构与设计哲学，揭示其简洁易用的特点。最后，文档将详细阐述 &lt;code&gt;nlohmann/json&lt;/code&gt; 在C++项目中的具体应用，包括安装、基本语法、核心API以及高级用法，旨在为C++开发者提供一份权威、实用的参考指南。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;关键词&lt;/strong&gt;: C++, JSON, nlohmann/json, 数据序列化, 反序列化, 开源库&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;1-nlohmannjson-简介&#34;&gt;1. nlohmann/json 简介&lt;/h2&gt;&#xA;&lt;h3 id=&#34;11-nlohmann的起源与发展&#34;&gt;1.1 nlohmann的起源与发展&lt;/h3&gt;&#xA;&lt;p&gt;&lt;code&gt;nlohmann/json&lt;/code&gt; 库由Niels Lohmann于2013年启动开发，其设计初衷是为C++提供一个现代、直观且功能完备的JSON处理解决方案。在JSON成为Web应用和数据交换事实标准的背景下，C++社区对一个易于使用且性能良好的JSON库的需求日益增长。早期的C++ JSON库往往存在API复杂、学习曲线陡峭或依赖外部库过多的问题。&lt;code&gt;nlohmann/json&lt;/code&gt; 的出现，以其&lt;strong&gt;仅头文件&lt;/strong&gt;、&lt;strong&gt;无需编译&lt;/strong&gt;、&lt;strong&gt;API设计与标准库容器（如 &lt;code&gt;std::vector&lt;/code&gt; 和 &lt;code&gt;std::map&lt;/code&gt;）高度契合&lt;/strong&gt;的特点，迅速获得了C++开发者的青睐。&lt;/p&gt;&#xA;&lt;p&gt;自发布以来，&lt;code&gt;nlohmann/json&lt;/code&gt; 持续迭代，不断完善功能、提升性能并修复潜在问题。它在GitHub上拥有庞大的社区支持和活跃的开发，已成为C++生态系统中处理JSON数据的首选库之一，广泛应用于各种项目，包括嵌入式系统、高性能服务器、桌面应用等。&lt;/p&gt;&#xA;&lt;h3 id=&#34;12-与其他c-json库的比较&#34;&gt;1.2 与其他C++ JSON库的比较&lt;/h3&gt;&#xA;&lt;p&gt;C++社区拥有多种JSON处理库，各有优劣。下表对 &lt;code&gt;nlohmann/json&lt;/code&gt; 与其他几个主流C++ JSON库进行了比较：&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;特性/库&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;nlohmann/json&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;RapidJSON&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Boost.PropertyTree&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;jsoncpp&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;API设计&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;直观，类似STL容器操作&lt;/td&gt;&#xA;          &lt;td&gt;DOM/SAX，性能导向&lt;/td&gt;&#xA;          &lt;td&gt;树形结构，通用数据&lt;/td&gt;&#xA;          &lt;td&gt;DOM，传统C++风格&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;易用性&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;极高，学习曲线平缓&lt;/td&gt;&#xA;          &lt;td&gt;中等，需要理解DOM/SAX模型&lt;/td&gt;&#xA;          &lt;td&gt;中等，需要理解属性树概念&lt;/td&gt;&#xA;          &lt;td&gt;中等，较为传统&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;性能&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;良好，满足大多数应用&lt;/td&gt;&#xA;          &lt;td&gt;极高，注重解析和序列化速度&lt;/td&gt;&#xA;          &lt;td&gt;中等，通用性带来的开销&lt;/td&gt;&#xA;          &lt;td&gt;中等&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;依赖&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;仅头文件，无外部依赖&lt;/td&gt;&#xA;          &lt;td&gt;仅头文件，无外部依赖&lt;/td&gt;&#xA;          &lt;td&gt;Boost库，依赖较重&lt;/td&gt;&#xA;          &lt;td&gt;需编译，无外部依赖&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;功能完备性&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;完备，支持各种JSON操作&lt;/td&gt;&#xA;          &lt;td&gt;完备，支持各种JSON操作&lt;/td&gt;&#xA;          &lt;td&gt;完备，但JSON仅是其一种格式&lt;/td&gt;&#xA;          &lt;td&gt;完备&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;内存效率&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;良好，但可能不如RapidJSON极致&lt;/td&gt;&#xA;          &lt;td&gt;极高，池分配器优化&lt;/td&gt;&#xA;          &lt;td&gt;中等&lt;/td&gt;&#xA;          &lt;td&gt;中等&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;编译时间&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;快速（仅头文件）&lt;/td&gt;&#xA;          &lt;td&gt;快速（仅头文件）&lt;/td&gt;&#xA;          &lt;td&gt;较慢（Boost库）&lt;/td&gt;&#xA;          &lt;td&gt;较慢（需编译）&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;&lt;strong&gt;总结&lt;/strong&gt;:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
