<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Git on PaperMod</title>
    <link>https://adityatelange.github.io/hugo-PaperMod/tags/git/</link>
    <description>Recent content in Git on PaperMod</description>
    <image>
      <title>PaperMod</title>
      <url>https://adityatelange.github.io/hugo-PaperMod/images/papermod-cover.png</url>
      <link>https://adityatelange.github.io/hugo-PaperMod/images/papermod-cover.png</link>
    </image>
    <generator>Hugo -- 0.146.6</generator>
    <language>en</language>
    <copyright>PaperMod Contributors</copyright>
    <lastBuildDate>Thu, 01 Jan 1970 00:00:00 +0800</lastBuildDate>
    <atom:link href="https://adityatelange.github.io/hugo-PaperMod/tags/git/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>git clone 包含 submodule 的仓库</title>
      <link>https://adityatelange.github.io/hugo-PaperMod/posts/git_clone%E5%8C%85%E5%90%ABsubmodule%E7%9A%84%E4%BB%93%E5%BA%93/</link>
      <pubDate>Thu, 01 Jan 1970 00:00:00 +0800</pubDate>
      <guid>https://adityatelange.github.io/hugo-PaperMod/posts/git_clone%E5%8C%85%E5%90%ABsubmodule%E7%9A%84%E4%BB%93%E5%BA%93/</guid>
      <description>&lt;ol&gt;
&lt;li&gt;使用 git clone 命令来克隆主仓库：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git clone &amp;lt;主仓库 URL&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;进入主仓库所在的根目录，并使用 &lt;code&gt;git submodule init&lt;/code&gt; 命令来初始化 submodule：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; &amp;lt;主仓库目录&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git submodule init
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;使用 &lt;code&gt;git submodule update&lt;/code&gt; 命令来更新 submodule 中的内容：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git submodule update
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这个命令会从 submodule 的远程仓库中拉取代码，并将其合并到本地代码中。&lt;/p&gt;</description>
    </item>
    <item>
      <title>git 使用指定的 ssh key</title>
      <link>https://adityatelange.github.io/hugo-PaperMod/posts/git%E4%BD%BF%E7%94%A8%E6%8C%87%E5%AE%9A%E7%9A%84ssh_key/</link>
      <pubDate>Thu, 01 Jan 1970 00:00:00 +0800</pubDate>
      <guid>https://adityatelange.github.io/hugo-PaperMod/posts/git%E4%BD%BF%E7%94%A8%E6%8C%87%E5%AE%9A%E7%9A%84ssh_key/</guid>
      <description>&lt;p&gt;Git 提供了以下两种方式来指定使用哪个 SSH Key 进行认证：&lt;/p&gt;
&lt;h2 id=&#34;使用-git-config-命令&#34;&gt;使用 Git Config 命令&lt;/h2&gt;
&lt;p&gt;使用 &lt;code&gt;git config&lt;/code&gt; 命令来配置 Git 的全局或本地参数。在这个命令中，可以使用 &lt;code&gt;core.sshCommand&lt;/code&gt; 参数来指定使用哪个 SSH Key 进行认证。&lt;/p&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 全局范围内使用 SSH Key&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ git config --global core.sshCommand &lt;span class=&#34;s2&#34;&gt;&amp;#34;ssh -i ~/.ssh/my_private_key&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 仅对当前仓库使用 SSH Key&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ git config core.sshCommand &lt;span class=&#34;s2&#34;&gt;&amp;#34;ssh -i ~/.ssh/my_private_key&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上面的命令会告诉 Git，使用 &lt;code&gt;~/.ssh/my_private_key&lt;/code&gt; 文件作为 SSH 私钥进行认证。&lt;/p&gt;
&lt;h2 id=&#34;使用-git-clone-命令&#34;&gt;使用 Git Clone 命令&lt;/h2&gt;
&lt;p&gt;在使用 git clone 命令克隆项目时，可以通过 &lt;code&gt;-c&lt;/code&gt; 或 &lt;code&gt;--config&lt;/code&gt; 参数来指定使用哪个 SSH Key 进行认证。示例如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ git clone -c core.sshCommand&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;ssh -i ~/.ssh/my_private_key&amp;#34;&lt;/span&gt; git@github.com:user/repo.git
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上面的命令将会使用 &lt;code&gt;-i ~/.ssh/my_private_key&lt;/code&gt; 指定的 SSH Key 进行认证。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ubuntu git 仓库搭建及代码上传</title>
      <link>https://adityatelange.github.io/hugo-PaperMod/posts/ubuntu_git_server_build_push_code/</link>
      <pubDate>Thu, 01 Jan 1970 00:00:00 +0800</pubDate>
      <guid>https://adityatelange.github.io/hugo-PaperMod/posts/ubuntu_git_server_build_push_code/</guid>
      <description>&lt;h1 id=&#34;ubuntu-git-仓库搭建及代码上传&#34;&gt;Ubuntu git 仓库搭建及代码上传&lt;/h1&gt;
&lt;h2 id=&#34;git-仓库服务器搭建&#34;&gt;git 仓库服务器搭建&lt;/h2&gt;
&lt;h3 id=&#34;1安装-git&#34;&gt;1.安装 git&lt;/h3&gt;
&lt;p&gt;首先在服务器上安装 &lt;code&gt;git&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt-get install git
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;2创建-git-账户&#34;&gt;2.创建 git 账户&lt;/h3&gt;
&lt;p&gt;接下来得创建一个专门用来进行 git 仓库版本控制的 Linux 用户，为了方便，这里建议切换到 root 用户 &lt;strong&gt;（下面的所有操作都是在 root 账户下完成）&lt;/strong&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo -i adduser git
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;接下来会要求输入密码等信息，直接按照提示输入即可。&lt;/p&gt;
&lt;h3 id=&#34;3创建登录证书&#34;&gt;3.创建登录证书&lt;/h3&gt;
&lt;p&gt;为了保证仓库的安全性，必须得要求登录仓库时使用密钥登录。首先执行下面的命令创建密钥的存放路径：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; /home/git/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mkdir .ssh
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;chmod &lt;span class=&#34;m&#34;&gt;755&lt;/span&gt; .ssh
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;touch .ssh/authorized_keys
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;chmod &lt;span class=&#34;m&#34;&gt;644&lt;/span&gt; .ssh/authorized_keys
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;接下来收集所有需要登录的用户的公钥，就是他们自己的 &lt;code&gt;id_rsa.pub&lt;/code&gt; 文件，把所有公钥导入到 &lt;code&gt;/home/git/.ssh/authorized_keys&lt;/code&gt; 文件里，一行一个。&lt;/p&gt;
&lt;h3 id=&#34;4禁用-git-用户-shell-登录&#34;&gt;4.禁用 git 用户 shell 登录&lt;/h3&gt;
&lt;p&gt;出于安全考虑，创建的 git 用户是不允许登录 shell 的&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;vi /etc/passwd
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;找到 passwd 文件中的：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git:x:1003:1004:,,,:/home/git:/bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;将其修改为：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git:x:1003:1004:,,,:/home/git:/usr/bin/git-shell
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这样，git 用户可以正常通过 ssh 使用 git ，但无法登录 shell，因为我们为 git 用户指定的 git-shell 每次一登录就自动退出。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
