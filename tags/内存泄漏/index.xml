<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>内存泄漏 on LuyangのBlog</title>
    <link>/tags/%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F/</link>
    <description>Recent content in 内存泄漏 on LuyangのBlog</description>
    <generator>Hugo</generator>
    <language>en-US</language>
    <lastBuildDate>Tue, 08 Jul 2025 02:30:00 +0800</lastBuildDate>
    <atom:link href="/tags/%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>📘 深入理解 ZeroMQ 异步连接与 REQ 消息堆积行为</title>
      <link>/posts/-%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3-zeromq-%E5%BC%82%E6%AD%A5%E8%BF%9E%E6%8E%A5%E4%B8%8E-req-%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF%E8%A1%8C%E4%B8%BA/</link>
      <pubDate>Tue, 08 Jul 2025 02:30:00 +0800</pubDate>
      <guid>/posts/-%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3-zeromq-%E5%BC%82%E6%AD%A5%E8%BF%9E%E6%8E%A5%E4%B8%8E-req-%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF%E8%A1%8C%E4%B8%BA/</guid>
      <description>&lt;h1 id=&#34;-深入理解-zeromq-异步连接与-req-消息堆积行为&#34;&gt;📘 深入理解 ZeroMQ 异步连接与 REQ 消息堆积行为&lt;/h1&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-文档概览&#34;&gt;✨ 文档概览&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;章节&lt;/th&gt;&#xA;          &lt;th&gt;内容&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;1. 简介&lt;/td&gt;&#xA;          &lt;td&gt;ZeroMQ &lt;code&gt;connect()&lt;/code&gt; 行为误区&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;2. 异步连接机制&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;connect()&lt;/code&gt; 实现原理与延迟连接&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;3. REQ socket 特性&lt;/td&gt;&#xA;          &lt;td&gt;REQ 的 FSM 状态机与堆积陷阱&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;4. 内存增长问题分析&lt;/td&gt;&#xA;          &lt;td&gt;实例重现与底层解释&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;5. 如何规避问题&lt;/td&gt;&#xA;          &lt;td&gt;参数设置、代码优化方案&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;6. 替代方案&lt;/td&gt;&#xA;          &lt;td&gt;使用 DEALER 替代 REQ 的可行性&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;7. 源码分析&lt;/td&gt;&#xA;          &lt;td&gt;ZeroMQ 源码路径与关键组件说明&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;8. 附录与参考资料&lt;/td&gt;&#xA;          &lt;td&gt;官方文献、工具、命令等&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;1--简介为什么连接成功了服务端却没起来&#34;&gt;1. 🔰 简介：为什么连接成功了服务端却没起来？&lt;/h2&gt;&#xA;&lt;p&gt;当你调用如下代码时：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;zmq&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;socket_t socket(context, zmq&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;socket_type&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;req);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;socket.connect(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tcp://127.0.0.1:5555&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;LogInfo(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Socket connected to endpoint&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;你可能会误以为服务端已经在线并成功连接。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;这是一个常见误区。&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;-正确理解&#34;&gt;✅ 正确理解：&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;code&gt;connect()&lt;/code&gt; 只是将目标 endpoint 添加到内部连接目标列表中，并不会立即发起 TCP 连接或等待对端响应。&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;这是 ZeroMQ 异步非阻塞通信模型的特性。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
