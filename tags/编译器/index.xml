<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>编译器 on PaperMod</title>
    <link>https://adityatelange.github.io/hugo-PaperMod/tags/%E7%BC%96%E8%AF%91%E5%99%A8/</link>
    <description>Recent content in 编译器 on PaperMod</description>
    <image>
      <title>PaperMod</title>
      <url>https://adityatelange.github.io/hugo-PaperMod/images/papermod-cover.png</url>
      <link>https://adityatelange.github.io/hugo-PaperMod/images/papermod-cover.png</link>
    </image>
    <generator>Hugo -- 0.146.6</generator>
    <language>en</language>
    <copyright>PaperMod Contributors</copyright>
    <lastBuildDate>Thu, 01 Jan 1970 00:00:00 +0800</lastBuildDate>
    <atom:link href="https://adityatelange.github.io/hugo-PaperMod/tags/%E7%BC%96%E8%AF%91%E5%99%A8/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>交叉编译工具链</title>
      <link>https://adityatelange.github.io/hugo-PaperMod/posts/%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91%E5%B7%A5%E5%85%B7%E9%93%BE/</link>
      <pubDate>Thu, 01 Jan 1970 00:00:00 +0800</pubDate>
      <guid>https://adityatelange.github.io/hugo-PaperMod/posts/%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91%E5%B7%A5%E5%85%B7%E9%93%BE/</guid>
      <description>&lt;p&gt;交叉编译工具链是一个由编译器、连接器和解释器组成的综合开发环境，交叉编译工具链主要由binutils、gcc和glibc三个部分组成。&lt;/p&gt;
&lt;p&gt;有时出于减小 libc 库大小的考虑，也可以用别的 c 库来代替 glibc，例如 uClibc、dietlibc 和 newlib。&lt;/p&gt;
&lt;p&gt;从授权上，分为免费授权版和付费授权版。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;免费版目前有三大主流工具商提供&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一是GNU（提供源码，自行编译制作）&lt;/li&gt;
&lt;li&gt;第二是 Codesourcery&lt;/li&gt;
&lt;li&gt;第三是Linora&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;收费版&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ARM原厂提供的armcc&lt;/li&gt;
&lt;li&gt;IAR提供的编译器&lt;/li&gt;
&lt;li&gt;等等&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;arm-none-linux-gnueabi-gcc&lt;/code&gt;：是 &lt;code&gt;Codesourcery&lt;/code&gt; 公司（目前已经被Mentor收购）基于GCC推出的的ARM交叉编译工具。可用于交叉编译ARM（32位）系统中所有环节的代码，包括裸机程序、u-boot、Linux kernel、filesystem和App应用程序。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;arm-linux-gnueabihf-gcc&lt;/code&gt;：是由 &lt;code&gt;Linaro&lt;/code&gt; 公司基于GCC推出的的ARM交叉编译工具。可用于交叉编译ARM（32位）系统中所有环节的代码，包括裸机程序、u-boot、Linux kernel、filesystem和App应用程序。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;aarch64-linux-gnu-gcc&lt;/code&gt;：是由 &lt;code&gt;Linaro&lt;/code&gt; 公司基于GCC推出的的ARM交叉编译工具。可用于交叉编译ARMv8 64位目标中的裸机程序、u-boot、Linux kernel、filesystem和App应用程序。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;arm-none-elf-gcc&lt;/code&gt;：是 &lt;code&gt;Codesourcery&lt;/code&gt; 公司（目前已经被Mentor收购）基于GCC推出的的ARM交叉编译工具。可用于交叉编译ARM MCU（32位）芯片，如ARM7、ARM9、Cortex-M/R芯片程序。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;arm-none-eabi-gcc&lt;/code&gt;：是 GNU 推出的的ARM交叉编译工具。可用于交叉编译ARM MCU（32位）芯片，如ARM7、ARM9、Cortex-M/R芯片程序。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;交叉编译工具链的命名规则为：&lt;code&gt;arch [-vendor] [-os] [-(gnu)eabi]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;arch – 体系架构，如ARM，MIPS（通过交叉编译工具生成的可执行文件或系统镜像的运行平台或环境）&lt;/li&gt;
&lt;li&gt;vendor – 工具链提供商&lt;/li&gt;
&lt;li&gt;os – 目标操作系统（host主要操作平台，也就是编译时的系统）&lt;/li&gt;
&lt;li&gt;eabi – 嵌入式应用二进制接口（Embedded Application Binary Interface）根据对操作系统的支持与否，&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;根据对操作系统的支持与否，ARM GCC可分为支持和不支持操作系统&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;arm-none-eabi：这个是没有操作系统的，自然不可能支持那些跟操作系统关系密切的函数，比如fork(2)。他使用的是newlib这个专用于嵌入式系统的C库。&lt;/li&gt;
&lt;li&gt;arm-none-linux-eabi：用于Linux的，使用Glibc&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;实例&lt;/p&gt;
&lt;p&gt;1、arm-none-eabi-gcc（ARM architecture，no vendor，not target an operating system，complies with the ARM EABI）
用于编译 ARM 架构的裸机系统（包括 ARM Linux 的 boot、kernel，不适用编译 Linux 应用 Application），一般适合 ARM7、Cortex-M 和 Cortex-R 内核的芯片使用，所以不支持那些跟操作系统关系密切的函数，比如fork(2)，他使用的是 newlib 这个专用于嵌入式系统的C库。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
